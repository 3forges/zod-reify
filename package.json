{
  "name": "@pesto-io/zod-reify",
  "version": "0.0.1-alpha",
  "description": "Pesto module to intantiate zod schema from Typescript source code as string.",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "files": [
    "/dist"
  ],
  "engines": {
    "node": "~20.12.0",
    "pnpm": "~9.11.0"
  },
  "homepage": "https://github.com/3forges/pesto-zod/blob/feature/init-src/n/ci/README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/3forges/pesto-zod/blob/feature/init-src/n/ci"
  },
  "bugs": {
    "url": "https://github.com/3forges/pesto-zod/issues"
  },
  "scripts": {
    "clean:api-docs:astro": "chmod +x ./.npm.scripts/astro-docs/clean.sh && bash ./.npm.scripts/astro-docs/clean.sh",
    "clean:api-docs": "chmod +x ./.npm.scripts/docs/clean.sh && bash ./.npm.scripts/docs/clean.sh",
    "gen:api-docs:html": "bash -c 'pnpm run clean:api-docs:astro && pnpm exec typedoc ./src/index.ts --out ./docs/  --tsconfig ./tsconfig.json'",
    "gen:api-docs:json": "bash -c \"pnpm run clean:api-docs:astro && pnpm exec typedoc ./src/index.ts  --tsconfig ./tsconfig.json --json documentation/astro/src/content/api-docs/data.json \"",
    "gen:api-docs:zod": "bash -c 'pnpm exec json-to-zod -s documentation/astro/src/content/api-docs/data.json -t documentation/astro/src/schemas/api-docs.zod.ts'",
    "gen:api-docs:md": "bash -c 'pnpm run clean:api-docs:astro && pnpm exec typedoc ./src/index.ts --out documentation/astro/src/content/api-docs/  --tsconfig ./tsconfig.json --plugin typedoc-plugin-markdown --plugin typedoc-plugin-frontmatter'",
    "gen:api-docs:astro": "bash -c 'pnpm run clean:api-docs:astro' && bash -c 'pnpm run gen:api-docs:json' && bash -c 'pnpm run gen:api-docs:zod'",
    "gen:api-docs": "bash -c 'pnpm run clean:api-docs' && bash -c 'pnpm run gen:api-docs:html'",
    "build:docs:astro": "bash -c \"pnpm i --frozen-lockfile\" && bash -c \"pnpm gen:unit:tests:report:astro\" && bash -c \"pnpm run gen:api-docs:astro\" && cd documentation/astro/ && bash -c \"pnpm i --frozen-lockfile\" && bash -c \"pnpm run build\"",
    "build:docs:astro:prod": "bash -c \"pnpm i --frozen-lockfile\" && bash -c \"pnpm gen:unit:tests:report:astro:prod\" && bash -c \"pnpm run gen:api-docs:astro\" && cd documentation/astro/ && bash -c \"pnpm i --frozen-lockfile\" && bash -c \"pnpm run build\"",
    "dev:docs:astro": "bash -c 'pnpm gen:unit:tests:report:astro' && bash -c 'pnpm run gen:api-docs:astro' && cd documentation/astro/ && bash -c 'pnpm run dev'",
    "dev:docs:html": "bash -c 'pnpm run gen:api-docs && serve docs/'",
    "dev:docs": "bash -c 'pnpm run gen:api-docs && pnpm exec serve docs/'",
    "test": "jest --silent=false",
    "test:report:junit": "jest --ci --reporters=default --reporters=jest-junit",
    "test:report": "bash -c  \"if [ -f ./junit.xml ]; then rm junit.xml; fi;\" && bash -c \"pnpm run 'test:report:junit'\"",
    "gen:unit:tests:report:json": "bash -c \"pnpm run 'test:report'\" && bash -c  \"if [ -f ./jest.junit.report.json ]; then rm ./jest.junit.report.json; fi;\" && bash -c  \"if [ -f ./documentation/astro/src/content/tests-report/unit-tests/jest.junit.report.json ]; then rm ./documentation/astro/src/content/tests-report/unit-tests/jest.junit.report.json; fi;\" && pnpm exec junit2json junit.xml | jq . | tee -a jest.junit.report.json && cp ./jest.junit.report.json documentation/astro/src/content/tests-report/unit-tests/ && rm junit.xml && rm ./jest.junit.report.json",
    "gen:unit:tests:report:json:prod": "bash -c \"pnpm run 'test:report'\" && bash -c  \"if [ -f ./jest.junit.report.json ]; then rm ./jest.junit.report.json; fi;\" && bash -c  \"if [ -f ./documentation/astro/src/content/tests-report/unit-tests/jest.junit.report.json ]; then rm ./documentation/astro/src/content/tests-report/unit-tests/jest.junit.report.json; fi;\" && pnpm exec junit2json junit.xml | tee -a jest.junit.report.json && cp ./jest.junit.report.json documentation/astro/src/content/tests-report/unit-tests/ && rm junit.xml && rm ./jest.junit.report.json",
    "gen:unit:tests:report:json:debug": "cat documentation/astro/src/content/tests-report/unit-tests/jest.junit.report.json | jq .",
    "gen:unit:tests:report:zod": "bash -c \"pnpm run gen:unit:tests:report:json:debug\" && bash -c  \"if [ -f ./documentation/astro/src/schemas/unit.tests.report.schema.ts ]; then rm ./documentation/astro/src/schemas/unit.tests.report.schema.ts; fi;\" && pnpm exec json-to-zod -s documentation/astro/src/content/tests-report/unit-tests/jest.junit.report.json -t documentation/astro/src/schemas/unit.tests.report.schema.ts",
    "gen:unit:tests:report:zod:prod": "bash -c  \"if [ -f ./documentation/astro/src/schemas/unit.tests.report.schema.ts ]; then rm ./documentation/astro/src/schemas/unit.tests.report.schema.ts; fi;\" && pnpm exec json-to-zod -s documentation/astro/src/content/tests-report/unit-tests/jest.junit.report.json -t documentation/astro/src/schemas/unit.tests.report.schema.ts",
    "gen:unit:tests:report:astro": "bash -c \"pnpm run 'gen:unit:tests:report:json'\" && bash -c \"pnpm run 'gen:unit:tests:report:zod'\"",
    "gen:unit:tests:report:astro:prod": "bash -c \"pnpm run 'gen:unit:tests:report:json:prod'\" && bash -c \"pnpm run 'gen:unit:tests:report:zod:prod'\"",
    "test:logs": "touch ./betterExperiment.logs && rm ./betterExperiment.logs && bash -c 'pnpm run test >>./betterExperiment.logs 2>&1'",
    "test:e2e": "echo 'Run e2e Tests'",
    "build": "bash  -c 'pnpm exec tsc'",
    "clean": "rm -Rf rawData && rm -Rf transformedData && rm -fr dist/"
  },
  "keywords": [
    "pesto",
    "zod",
    "typescript",
    "ts-morph",
    "jest"
  ],
  "author": "The Pesto Team",
  "license": "ISC",
  "dependencies": {
    "redaxios": "^0.5.1",
    "ts-morph": "^23.0.0",
    "uuid": "^10.0.0",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@types/htmlparser2": "^3.10.7",
    "@types/jest": "^29.5.12",
    "@types/react-html-parser": "^2.0.6",
    "@types/showdown": "^2.0.6",
    "@types/uuid": "^10.0.0",
    "gray-matter": "^4.0.3",
    "highlight.js": "^11.9.0",
    "htmlparser2": "^9.1.0",
    "jest": "^29.7.0",
    "jest-junit": "^16.0.0",
    "json-to-zod": "^1.1.2",
    "junit2json": "^3.1.12",
    "markdown-it": "^14.1.0",
    "react-html-parser": "^2.0.2",
    "rehype": "^13.0.1",
    "rehype-add-classes": "^1.0.0",
    "rehype-document": "^7.0.3",
    "rehype-format": "^5.0.0",
    "rehype-stringify": "^10.0.0",
    "remark": "^15.0.1",
    "remark-gfm": "^4.0.0",
    "remark-html": "^16.0.1",
    "remark-parse": "^11.0.0",
    "remark-rehype": "^11.1.0",
    "serve": "^14.2.1",
    "showdown": "^2.1.0",
    "to-vfile": "^8.0.0",
    "ts-jest": "^29.1.2",
    "ts-node": "^10.9.2",
    "typedoc": "^0.25.12",
    "typedoc-default-themes": "^0.12.10",
    "typedoc-plugin-frontmatter": "1.0.0-next.1",
    "typedoc-plugin-markdown": "4.0.0-next.54",
    "typescript": "^5.4.3",
    "unified": "^11.0.4",
    "zod-matter": "^0.1.1"
  }
}
